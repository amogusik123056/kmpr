import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
from telegram.error import TelegramError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
TOKEN = "8089566253:AAGJSzNBhjgoEK5ZolkgIqH8a8Q99iPuu44"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
ANON_GROUP_LINK = "https://t.me/+Ql0IZosRRu82YTQy"  # –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
ANON_GROUP_ID = -1002514617765  # ID –∞–Ω–æ–Ω–∏–º–Ω–æ–π –≥—Ä—É–ø–ø—ã (–¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å -100)
FORWARD_GROUP_ID = -1002698558394  # ID –≥—Ä—É–ø–ø—ã –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ (—Ç–æ–∂–µ —Å -100)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    filename='bot.log'  # –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —Ñ–∞–π–ª
)
logger = logging.getLogger(__name__)

async def debug(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
    await update.message.reply_text(
        f"üõ† –¢–µ—Å—Ç –±–æ—Ç–∞:\n"
        f"‚Ä¢ ID —ç—Ç–æ–≥–æ —á–∞—Ç–∞: {update.message.chat.id}\n"
        f"‚Ä¢ –ë–æ—Ç –∂–∏–≤ –∏ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã"
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        logger.info(f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {update.message.from_user.id}: {update.message.text or '–ú–µ–¥–∏–∞-—Ñ–∞–π–ª'}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
        test_msg = await context.bot.send_message(
            chat_id=update.message.chat.id,
            text="üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏..."
        )
        await test_msg.delete()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∞–Ω–æ–Ω–∏–º–Ω—É—é –≥—Ä—É–ø–ø—É
        sent_msg = await context.bot.send_message(
            chat_id=ANON_GROUP_ID,
            text=f"‚úâÔ∏è –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{update.message.text}",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîó –û—Ç–∫—Ä—ã—Ç—å", url=ANON_GROUP_LINK)]])
        )
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∞–Ω–æ–Ω–∏–º–Ω—É—é –≥—Ä—É–ø–ø—É. ID: {sent_msg.message_id}")

        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ –¥—Ä—É–≥—É—é –≥—Ä—É–ø–ø—É
        forwarded_msg = await update.message.forward(FORWARD_GROUP_ID)
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ. ID: {forwarded_msg.message_id}")

        await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!")

    except TelegramError as e:
        logger.error(f"–û—à–∏–±–∫–∞ Telegram: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")

if __name__ == "__main__":
    application = ApplicationBuilder().token(TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    application.add_handler(CommandHandler("debug", debug))
    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    application.run_polling()